services:
  db:
    image: postgres:latest
    hostname: db
    restart: unless-stopped #restart automatico caso aconteca algum problema
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: order_flow
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_PORT: 5432
      POSTGRES_HOST: db
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "768m"
    volumes:
      - db:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: 'rabbitmq'
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512m"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  api1:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api1
    restart: always
    environment:
      HTTP_PORT: 3000
      AMQP_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
      DB_USER: postgres
      DB_NAME: order_flow
      DB_PASSWORD: pgpassword
      DB_PORT: 5432
      DB_HOST: db
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "512m"

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api2
    restart: always
    environment:
      HTTP_PORT: 3001
      AMQP_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
      DB_USER: postgres
      DB_NAME: order_flow
      DB_PASSWORD: pgpassword
      DB_PORT: 5432
      DB_HOST: db
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "512m"

  consumer:
    build:
      context: .
      dockerfile: Dockerfile-consumer
    environment:
      AMQP_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
      DB_USER: postgres
      DB_NAME: order_flow
      DB_PASSWORD: pgpassword
      DB_PORT: 5432
      DB_HOST: db
    restart: always
    hostname: consumer
    depends_on:
      api1:
        condition: service_started
      api2:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "256m"

  nginx:
    image: nginx
    hostname: nginx
    volumes:
      - ./scripts/nginx/:/etc/nginx/
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "256m"

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - 8081:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgpassword
    volumes:
      - pgadmin:/var/lib/pgadmin

volumes:
  db:
    driver: local
  pgadmin:
    driver: local
  rabbitmq:
    driver: local